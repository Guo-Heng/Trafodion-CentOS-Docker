;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

;;remote file
;;(require 'tramp)
;;(setq tramp-default-method "ssh")

;; fullscreen
(add-to-list 'default-frame-alist '(fullscreen . maximized))

(tool-bar-mode 0)
(menu-bar-mode 0)
(scroll-bar-mode 0)

;; font
(set-default-font "Consolas 14")

;;display line num
(global-linum-mode 1)
(setq linum-format "%d ")
(setq column-number-mode t)

;;行号
;;(global-linum-mode 1)
;;(setq column-number-mode t)
;;(setq line-number-mode t)


;;theme
(add-to-list 'custom-theme-load-path "~/.emacs.d/depend/")
(load-theme 'monokai t)

;; 一打开就起用 text 模式。 
;;(setq default-major-mode 'text-mode)

;; 以 y/n代表 yes/noe
(fset 'yes-or-no-p 'y-or-n-p) 

;; 显示括号匹配 
(show-paren-mode t)
(setq show-paren-style 'parentheses)

;;highlight line
(global-hl-line-mode 1)

;; close startup Picture
(setq inhibit-startup-message t)

;;光标靠近鼠标指针时，让鼠标指针自动让开
(mouse-avoidance-mode 'animate) 
 
;;指针不要闪，我得眼睛花了 
;;(blink-cursor-mode -1) 
;;(transient-mark-mode 1)

;;打开时就启用text模式
;;(setq default-major-mode 'text-mode)

;;设置tab为4个空格的宽度
(setq default-tab-width 4)
(setq c-basic-offset 4)

;;禁止终端响铃
(setq visiable-bell t) 
  

;;光标显示为一竖线
(setq-default cursor-type 'bar)

(add-to-list 'load-path "~/.emacs.d/depend/")

(require 'xcscope)
(cscope-setup)

;;xscope dont update
;;(setq cscope-do-not-update-database t)

;;(add-hook 'java-mode-hook (function cscope-minor-mode))

(add-hook 'java-mode-hook (lambda()
			    (cscope-minor-mode)
			    (setq c-basic-offset 4)))

;;set c-x c-f default 
(setq default-directory "~/work/esgyn/")

;;(global-unset-key (kbd "C-SPC"))
(global-set-key (kbd "M-RET") 'set-mark-command)

(setq create-lockfiles nil)

;; C-SPACE 被输入法占用，C-@ 又太难按，于是把 set mark 绑定到 C-return
;;(define-key global-map [C-RETURN] 'set-mark-command)

;;http://emacswiki.org/emacs/InteractivelyDoThings 
(require 'ido)
(ido-mode t)

;;
(require 'desktop)
(desktop-save-mode t)
(setq desktop-buffers-not-to-save "^$")
(setq desktop-files-not-to-save "^$")


;;新建文件的编码方式
;;(setq default-buffer-file-coding-system 'utf-8)
;;键盘输入的编码方式
;;(set-keyboard-coding-system 'utf-8)
;;读取或写入文件名的编码方式
;;(setq file-name-coding-system 'utf-8) 


;; Prevent Extraneous Tabs
(setq-default indent-tabs-mode nil)


;; Add Cygwin bin to PATH, so that xcscope can find cscope and other
;; commands
;;(setenv "PATH" (concat "/usr/bin:/bin" (getenv "PATH")))
;;(setq exec-path (append '("/usr/bin" "/bin") exec-path))


;;======================            google-c-style        =====================
;;(load-file "~/.emacs.d/depend/google-c-style.el")
;;(add-hook 'c-mode-common-hook 'google-set-c-style)
;;(add-hook 'c-mode-common-hook 'google-make-newline-indent)
;;----------------------        END    google-c-style        ---------------------

;; multi-term
;;(require 'multi-term)
;;(setq multi-term-program "/bin/bash")

;;(setq system-uses-terminfo nil)
;;(setq multi-term-program-switches "--login")



;;my remote shell   设置my-shell 为一个链接
;;(defun my-shell ()
;;    (interactive)
;;    (let ((default-directory "/plink:esgyn@192.168.0.113:"))
;;      (shell)))

(setq explicit-shell-file-name "/bin/bash")
(setq shell-file-name explicit-shell-file-name)

;;(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t) 
;;(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on t) 

;; Shell mode color ;; better contrast colors
;;(setq ansi-color-names-vector 
;;      ["black" "red4" "green4" "yellow4"
;;       "blue3" "magenta4" "cyan4" "white"])
;;(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)


;; 取消自动保存
(auto-save-mode 0)



;;Personal information
;;(setq send-mail-function (quote smtpmail-send-it))
;;(setq smtpmail-smtp-server "smtp.gmail.com")
;;(setq smtpmail-smtp-service 25)
;;(setq user-full-name "ymxdgyx")
;;(setq user-mail-address "ymxdgyx@gmail.com") 




(require 'sr-speedbar)  
   
(setq dframe-update-speed t)
(setq speedbar-show-unknown-files t)  
(setq speedbar-use-images nil)  
(setq sr-speedbar-width 60)
(setq sr-speedbar-auto-refresh t) 
(setq sr-speedbar-right-side nil)  
(setq speedbar-tag-hierarchy-method nil) 

(global-set-key (kbd "<f2>") (lambda()  
                               (interactive)  
                               (sr-speedbar-toggle)))

;;(sr-speedbar-toggle)

;;(defun speedbar-directories-update ()
;;  "Make speedbar directories incremental update"
;;  (speedbar-refresh)
;;)

;;(add-hook 'after-save-hook 'speedbar-directories-update)
;;
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ecb-key-map
   (quote
    ("C-c ."
     (t "fh" ecb-history-filter)
     (t "fs" ecb-sources-filter)
     (t "fm" ecb-methods-filter)
     (t "fr" ecb-methods-filter-regexp)
     (t "ft" ecb-methods-filter-tagclass)
     (t "fc" ecb-methods-filter-current-type)
     (t "fp" ecb-methods-filter-protection)
     (t "fn" ecb-methods-filter-nofilter)
     (t "fl" ecb-methods-filter-delete-last)
     (t "ff" ecb-methods-filter-function)
     (t "p" ecb-nav-goto-previous)
     (t "n" ecb-nav-goto-next)
     (t "lc" ecb-change-layout)
     (t "lr" ecb-redraw-layout)
     (t "lw" ecb-toggle-ecb-windows)
     (t "lt" ecb-toggle-layout)
     (t "s" ecb-window-sync)
     (t "r" ecb-rebuild-methods-buffer)
     (t "a" ecb-toggle-auto-expand-tag-tree)
     (t "x" ecb-expand-methods-nodes)
     (t "h" ecb-show-help)
     (nil "C-c e" ecb-goto-window-edit-last)
     (t "C-c e" ecb-goto-window-edit1)
     (t "C-c e" ecb-goto-window-edit2)
     (t "gc" ecb-goto-window-compilation)
     (nil "C-c 0" ecb-goto-window-directories)
     (nil "C-c 1" ecb-goto-window-sources)
     (nil "C-c 2" ecb-goto-window-methods)
     (nil "C-c 3" ecb-goto-window-history)
     (t "ga" ecb-goto-window-analyse)
     (t "gb" ecb-goto-window-speedbar)
     (t "md" ecb-maximize-window-directories)
     (t "ms" ecb-maximize-window-sources)
     (t "mm" ecb-maximize-window-methods)
     (t "mh" ecb-maximize-window-history)
     (t "ma" ecb-maximize-window-analyse)
     (t "mb" ecb-maximize-window-speedbar)
     (t "e" eshell)
     (t "o" ecb-toggle-scroll-other-window-scrolls-compile)
     (t "\\" ecb-toggle-compile-window)
     (t "/" ecb-toggle-compile-window-height)
     (t "," ecb-cycle-maximized-ecb-buffers)
     (t "." ecb-cycle-through-compilation-buffers))))
 '(ecb-options-version "2.40")
 '(package-selected-packages (quote (magit))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


(semantic-mode 1)

(add-to-list 'load-path "~/.emacs.d/depend/ecb")
(require 'ecb)
;;(setq ecb-auto-activate t) ;;auto start ecb
(global-set-key  [(f7)] 'ecb-activate) ;;F7:open ecb
(global-set-key  [(f8)] 'ecb-deactivate) ;;F8:close ecb

(global-set-key (kbd "C-x g") 'magit-status)


